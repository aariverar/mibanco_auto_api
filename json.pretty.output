[
{
  "elements": [
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:12",
      "name": "reqres Exitoso sin validacion de response",
      "status": "passed",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "1"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"1\"",
          "result": {
            "duration": 0.06024026870727539,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "1"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"1\"",
          "result": {
            "duration": 1.079590082168579,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "1"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"1\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "1"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"1\"",
          "result": {
            "duration": 0.021172285079956055,
            "status": "passed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    },
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:13",
      "name": "Escenario Skippeado",
      "status": "skipped",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "2"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"2\"",
          "result": {
            "duration": 0.00959014892578125,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "2"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"2\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "2"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"2\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "2"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"2\"",
          "result": {
            "duration": 0.0003209114074707031,
            "status": "passed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    },
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:14",
      "name": "reqres Exitoso",
      "status": "failed",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "3"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"3\"",
          "result": {
            "duration": 0.05500507354736328,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "3"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"3\"",
          "result": {
            "duration": 0.8129737377166748,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "3"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"3\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "3"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"3\"",
          "result": {
            "duration": 0.05447959899902344,
            "error_message": [
              "Assertion Failed: [LOG] Error al validar el contenido del response",
              "Captured stdout:",
              "[LOG] Se extrae del excel los datos",
              "[LOG] Se envia la peticion",
              "[LOG] Se valida el status Code",
              "Expected Status Code: 201",
              "Actual Status Code: 201",
              "[LOG] Se valida el contenido del response",
              "Actual Content: {",
              "    \"name\": \"morpheus\",",
              "    \"job\": \"leader\",",
              "    \"id\": \"881\",",
              "    \"createdAt\": \"2024-06-24T17:45:08.876Z\"",
              "}",
              "Expected Content_1",
              "Expected Content: leader",
              "Expected Content_2",
              "Expected Content: \"id\": \"97\"",
              "Expected Content_3",
              "Expected Content: \"name\": \"morpheus\"",
              "Expected Content_4",
              " PASSED FAILED PASSED ",
              "[LOG] Error al validar el contenido del response",
              "Step failed: el response debe contener el contenido esperado del excel \"3\""
            ],
            "status": "failed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    },
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:15",
      "name": "jsonplaceholder exitoso PUT",
      "status": "passed",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "4"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"4\"",
          "result": {
            "duration": 0.05960536003112793,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "4"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"4\"",
          "result": {
            "duration": 0.9717860221862793,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "4"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"4\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "4"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"4\"",
          "result": {
            "duration": 0.06001710891723633,
            "status": "passed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    },
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:16",
      "name": "Api Login HBK - Exitoso",
      "status": "failed",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "5"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"5\"",
          "result": {
            "duration": 0.0701596736907959,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "5"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"5\"",
          "result": {
            "duration": 0.6532316207885742,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "5"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"5\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "5"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"5\"",
          "result": {
            "duration": 0.06291317939758301,
            "error_message": [
              "Assertion Failed: [LOG] Error al validar el contenido del response",
              "Captured stdout:",
              "[LOG] Se extrae del excel los datos",
              "[LOG] Se envia la peticion",
              "[LOG] Se valida el status Code",
              "Expected Status Code: 200",
              "Actual Status Code: 200",
              "[LOG] Se valida el contenido del response",
              "Actual Content: {",
              "    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ3aGl0ZWxpc3Qtc3RhdGUiOiJiOGNjNzkyNS04OTI2LTQwZTMtOWRiOS1iN2IwZGVjZWEzOGMiLCJhdXRoSW5kZXhWYWx1ZSI6Im1pYmFuY28tbG9naW4tcmVjYXB0Y2hhIiwib3RrIjoiaTJrY2EwajJhdDZvZXJvY29udmVmMnM0ZGciLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2FscGhhIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1cVpHVk5jRUpNZWpoSVpWUnhXbFpxUTB0Nk4yWm5MbE5YWnpBd1UyMHRkWEZFVFVvMGJYRlBWMmx2VDFWRFdtOHlRV2hDYzFSeVUxRlJZM014U2xsZmIzTXhjMkpLZUVVdGJXWnlUV1F5V1RsaVIyOWpjM1ZqT0ZBNFptUmhNWGhaVUV4WlpXeEVibUZ0VXkxMWFGZHpSemxoTW5SdVFtbFFaRVZrWmxkWFNFeG1RMGhMTFRGamJqbDBXVVpzVGtZdExYQjBlVlF5TTJKSFlYUTVlVE51UVhsTVkyNWxkRUpQZVZWb1RFdE9OV3BKWW1kUVVYTkVRMnB4Y2pCaFlrRkxZVlJtWDFCTU56TXdNbmhCTmxVeFdYRkNSREJwYzI1SlkyOWlOVmxQV25WSFZHSlZlRmhtV2w5YU9VZFNiVzlhVEZWbFdqSk5lSFF5VTJaMk1taFdPRkZRVGkxa1JuTkdiamc1Y0dac1FXMUlWRmt4T1c5U1RUWlVTVmhHUm0xaE1FcGpiMFpxY0Vkb1Z6TlVTRjlXVjFsSWVXbGpXVzVJUm5vMlRGUnhWMnA1V2xGeGFVbGpkRk5mYWtkbWFHMHdOa3d5U0ZWTllrVXdNamh0V1VOVVJsbGlhMDl1Y0Y5NVFUSlhZM1JTVUROdFIyaG5kVUZvTUZSRlVIYzBPR3RJT1RCdGNsSjJhRU5mWjJNM1RGSm5NVEpzUjJOVlVtOTBlbDlKVm5wM1VHZHBiRzB3TVVwaFYzWm5iM0ZUVWpZNVNrZGtUMDVYTUZWYU5HWnJXbE5aZVdOU2VucG5kM28xYlZkU1RTMWtTRk5tWjAwd1F6UlljRTA1TVhRd2JFOHdjMUJSTmtWalZXWmpXbEEyUjI1bFlrWjBUREZvZW5nM1NVaFphbUpxZEU1NVZ6TTJhVFIzV0hWNWIyNDVMVnBrV0hkcU5FSjZUbU5RT0hSeldYUkJhR2xpVlhGYWRHMURhRUZYU0RsVVNsaGhYMnA0YlVGUlpuaFNaa1JzWkV4ZmVtSlBYMTlpWjJST1QyZFdSWGRJTm5SNU1rOXVUVXMzYTBzNGEybFRkVGRNWDFOV1QzbFBjRmMwUTNKVlVXMU5UMW8zYm1nMk9FdGtRWEZzYVZCcGRYbENhek52Y2tWa0xVc3pNM3ByUWpobE9UVmFWVk4wTjAxdE5XVkRNVk5XZGxGTWMwWmtXRGxwWmtzMVJEWm1NRk5DYjFCWk5rODNiMFoxWkVkMVdYRTVUMlZQUzAxcmREQm1ialpaTTNKWWJHTkRMWGQxTkZVdE1Xb3plR1pJWVVkUk1FNXFTR1pPTFV0eFYxVlRMVGs0YVVnM1dHUkRZMmRTYUZBM2VqTkxaV1JKYzBScVExOUdOMUphUkZCa1UwZFphbkU0UkRCaFJHbDJWbGsxWkZaclNIaHlNMEpRTjJSV1ZGaEpjRWRrTjNJMlVUbFZXRWRrWkdGUlZscFZaMVowV2xsRVZsbElTRUYyVW0xNE9YRmhORlpGZWkxRmIzbEllRzlxU0hCblRYTnFUamhHVkdGYVpYZHZNbU5mV1VoRVVGcEZOVzEyVWpkR2IyOTZPRXBNUkRaTE9WaHRWV2xLWVVwTVRHMVNielJQUlV0NWFFeFJNSE5JU0d0ckxTMVpNbkJ2Y2xaTFIzSnlNM1ZPTUdrMWRuTmxWMFpOTjNCUFEzaHhRV1phTjJSdVNFZEtjVEU1YnpOYVN6Z3pYMVJ2TkdsSVgxWm1XbGwxU1haeFdrazRhSGxaTFZCdVMwWXhjbVJNTWpkdGJtODRkSE5wWVZwVFMwOVRaalY0YkROcU5WbFVNR2hNYVhJeGNXVjVSVk16ZDFwYVpFcHhURXRhU1dvMlNYVmZjVjh3TW1oNVpqaDVVMFpxVkZWcVdqVnpaVVpHYlhWblNWTnpWbGhvZGxKWU9XUnVUakZ5V1VFMGF6ZHBhWGhHTm0wdE9HbDVNMnBqU0Zoek1HTklTMFkxWjBzMWVFNVZhak13Y1hObldsQmhWVmMzY0RVMloxbFhOMVp2T0RsSGFISnFOV3gxWWxCcVgySmlkMnBUUjI5MVZuQktabE5JVjFaV2FGQnpWMDA1Y0hKdVFVRjJVR2w0Vm1JdFIxOVNURUZGUzBSRVNXRlNNRFUyYWxRM1RVVlViMXA1Tlc1b05ERlJOblZKZVVVNVdqZHBjaTFRYVdKMVVVeFljbGxtV1ZveFJIVk9Ta2RZU214VFQzSmZVM05WUmpVemVsaDJYekV6TVZsTFVrOU9NbTVpY2t4VVozTjVVRmRLZDA1Vk1uVk1Wamt5WjNOc05VcDNhbGRvZFZka2RFTTNSVlF4VjFSdWJreEpRVWd5T1V4RWFETTFVMnhzWkZKUmRXczVkVmhsVGtGelZYSm1Oa0V0VjNKSlNuSnJNMjAzYVZJd2N6QkRaR3ByUm1rM1oybFlWVzk1UjJoTWVYVmFRWGh2ZEU5UmJFTjZObVJoVHpCdFltZDVhWEpmUW1Wb2JVRXdWM2c0TjJWdlZrWmxTM2RHT0MweE1YUk9XSGxWWWxGVE1HRlVlVXRmYmxSUGMyMVhaR0UzVTI5cWVWb3RiMDlpYzFkdVJHNHhXVlZwZDAxM2ExUjZjSEZxZERkMmNERjRiRXN3VVhsR1ZYbG5ablk1VTFFME9FWjRSblZNYTBJMGIyMVFVUzVKWTNGWmNFUmpSbXN4WWt3d2MySnhWbGhmVlhobi4yMWE0cUxFck8ySk9oTDg3dGFEczlxWXJGVWpBRUJJX29qQV82a0tMcDZFIiwiZXhwIjoxNzE5MjUxNDcwLCJpYXQiOjE3MTkyNTExMTB9.1VesEhI06yqwzVflyoj25579OSKTEKigtoNh4zo2sAk\",",
              "    \"callbacks\": [",
              "        {",
              "            \"type\": \"NameCallback\",",
              "            \"output\": [",
              "                {",
              "                    \"name\": \"prompt\",",
              "                    \"value\": \"User Name\"",
              "                }",
              "            ],",
              "            \"input\": [",
              "                {",
              "                    \"name\": \"IDToken1\",",
              "                    \"value\": \"\"",
              "                }",
              "            ],",
              "            \"_id\": 0",
              "        },",
              "        {",
              "            \"type\": \"PasswordCallback\",",
              "            \"output\": [",
              "                {",
              "                    \"name\": \"prompt\",",
              "                    \"value\": \"Password\"",
              "                }",
              "            ],",
              "            \"input\": [",
              "                {",
              "                    \"name\": \"IDToken2\",",
              "                    \"value\": \"\"",
              "                }",
              "            ],",
              "            \"_id\": 1",
              "        }",
              "    ],",
              "    \"stage\": \"credentials-collect\"",
              "}",
              "Expected Content_1",
              "Expected Content: \"stage\": \"credentials-collect\"",
              "Expected Content_2",
              "Expected Content: {",
              "                    \"name\": \"IDToken2\",",
              "                    \"value\": \"\"",
              "                }",
              "Expected Content_3",
              "Expected Content: hola",
              "Expected Content_4",
              "Expected Content: \"type\": \"NameCallback\",",
              "Expected Content_5",
              " PASSED PASSED FAILED PASSED ",
              "[LOG] Error al validar el contenido del response",
              "Step failed: el response debe contener el contenido esperado del excel \"5\""
            ],
            "status": "failed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    },
    {
      "keyword": "Scenario Outline",
      "location": "src/test/features/api_test.feature:17",
      "name": "Api Login HBK - Fallido - Mal Params",
      "status": "passed",
      "steps": [
        {
          "keyword": "Given",
          "location": "src/test/features/api_test.feature:5",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "6"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:10"
          },
          "name": "se lee el endpoint y lo headers del excel \"6\"",
          "result": {
            "duration": 0.08318877220153809,
            "status": "passed"
          },
          "step_type": "given"
        },
        {
          "keyword": "When",
          "location": "src/test/features/api_test.feature:6",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "6"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:33"
          },
          "name": "cuando envio un request al endpoint \"6\"",
          "result": {
            "duration": 0.623981237411499,
            "status": "passed"
          },
          "step_type": "when"
        },
        {
          "keyword": "Then",
          "location": "src/test/features/api_test.feature:7",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "6"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:72"
          },
          "name": "se valida el estado del response con el esperado del excel \"6\"",
          "result": {
            "duration": 0.0,
            "status": "passed"
          },
          "step_type": "then"
        },
        {
          "keyword": "And",
          "location": "src/test/features/api_test.feature:8",
          "match": {
            "arguments": [
              {
                "name": "datos",
                "value": "6"
              }
            ],
            "location": "src/test/features/steps/api_steps.py:95"
          },
          "name": "el response debe contener el contenido esperado del excel \"6\"",
          "result": {
            "duration": 0.029346704483032227,
            "status": "passed"
          },
          "step_type": "then"
        }
      ],
      "tags": [
        "test1",
        "Prueba"
      ],
      "type": "scenario"
    }
  ],
  "keyword": "Feature",
  "location": "src/test/features/api_test.feature:1",
  "name": "Automatizacion de Servicios",
  "status": "failed",
  "tags": []
}
]
