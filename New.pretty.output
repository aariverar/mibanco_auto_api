[
    {
        "elements": [
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:12",
                "name": "reqres Exitoso sin validacion de response",
                "status": "passed",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "1"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"1\"",
                        "result": {
                            "duration": 0.04428458213806152,
                            "status": "passed",
                            "message": "Se extrae: \nEndpoint: https://reqres.in/api/login"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "1"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"1\"",
                        "result": {
                            "duration": 0.8149013519287109,
                            "status": "passed",
                            "message": "<strong>REQUEST:</strong>\nPOST https://reqres.in/api/login\nRequest Headers: {\n    \"Content-Length\": \"57\",\n    \"Content-Type\": \"application/json\"\n}\nBody: {\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}\n\n<strong>RESPONSE:</strong>\nPOST - Code: 200 OK\nHeaders: {\n    \"Date\": \"Tue, 25 Jun 2024 15:30:58 GMT\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"Content-Length\": \"29\",\n    \"Connection\": \"keep-alive\",\n    \"Report-To\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?ts=1719329458&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2lhZeLiHBn5Cdv8ZbLJJvZo16P3cVb3JrKpmxjmpF60%3D\\\"}]}\",\n    \"Reporting-Endpoints\": \"heroku-nel=https://nel.heroku.com/reports?ts=1719329458&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2lhZeLiHBn5Cdv8ZbLJJvZo16P3cVb3JrKpmxjmpF60%3D\",\n    \"Nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"success_fraction\\\":0.005,\\\"failure_fraction\\\":0.05,\\\"response_headers\\\":[\\\"Via\\\"]}\",\n    \"X-Powered-By\": \"Express\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Etag\": \"W/\\\"1d-lGCrvD6B7Qzk11+2C98+nGhhuec\\\"\",\n    \"Via\": \"1.1 vegur\",\n    \"CF-Cache-Status\": \"DYNAMIC\",\n    \"Server\": \"cloudflare\",\n    \"CF-RAY\": \"899600779829c834-ARI\"\n}\nElapsed Time: 0:00:00.791389\n{\n    \"token\": \"QpwL5tke4Pnpja7X4\"\n}\n"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "1"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"1\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "[LOG] Se valida el status Code\nExpected Status Code: 200\nActual Status Code: 200\n"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "1"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"1\"",
                        "result": {
                            "duration": 0.0311129093170166,
                            "status": "passed",
                            "message": "No hay validaciones"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            },
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:13",
                "name": "Escenario Skippeado",
                "status": "skipped",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "2"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"2\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "NO-EXECUTED"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "2"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"2\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "NO-EXECUTED"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "2"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"2\"",
                        "result": {
                            "duration": 0.0010485649108886719,
                            "status": "passed",
                            "message": "NO-EXECUTED"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "2"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"2\"",
                        "result": {
                            "duration": 0.00027370452880859375,
                            "status": "passed",
                            "message": "NO-EXECUTED"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            },
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:14",
                "name": "reqres Exitoso",
                "status": "failed",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "3"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"3\"",
                        "result": {
                            "duration": 0.04974651336669922,
                            "status": "passed",
                            "message": "Se extrae: \nEndpoint: https://reqres.in/api/users"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "3"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"3\"",
                        "result": {
                            "duration": 0.7136890888214111,
                            "status": "passed",
                            "message": "<strong>REQUEST:</strong>\nPOST https://reqres.in/api/users\nRequest Headers: {\n    \"Content-Length\": \"37\",\n    \"Content-Type\": \"application/json\"\n}\nBody: {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}\n\n<strong>RESPONSE:</strong>\nPOST - Code: 201 Created\nHeaders: {\n    \"Date\": \"Tue, 25 Jun 2024 15:30:59 GMT\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"Content-Length\": \"84\",\n    \"Connection\": \"keep-alive\",\n    \"Report-To\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?ts=1719329459&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RijtQ8v82%2FbQT0AZrqU7q4%2B3jPPDaCXfOKwVXbSv2BQ%3D\\\"}]}\",\n    \"Reporting-Endpoints\": \"heroku-nel=https://nel.heroku.com/reports?ts=1719329459&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RijtQ8v82%2FbQT0AZrqU7q4%2B3jPPDaCXfOKwVXbSv2BQ%3D\",\n    \"Nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"success_fraction\\\":0.005,\\\"failure_fraction\\\":0.05,\\\"response_headers\\\":[\\\"Via\\\"]}\",\n    \"X-Powered-By\": \"Express\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Etag\": \"W/\\\"54-hy0kKFQOUSWREeS32n5lqAsp/Jg\\\"\",\n    \"Via\": \"1.1 vegur\",\n    \"CF-Cache-Status\": \"DYNAMIC\",\n    \"Server\": \"cloudflare\",\n    \"CF-RAY\": \"8996007d2d85c844-ARI\"\n}\nElapsed Time: 0:00:00.692996\n{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\",\n    \"id\": \"635\",\n    \"createdAt\": \"2024-06-25T15:30:59.147Z\"\n}\n"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "3"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"3\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "[LOG] Se valida el status Code\nExpected Status Code: 201\nActual Status Code: 201\n"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "3"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"3\"",
                        "result": {
                            "duration": 0.0535578727722168,
                            "error_message": [
                                "Assertion Failed: [LOG] Error al validar el contenido del response",
                                "Captured stdout:",
                                "[LOG] Se extrae del excel los datos",
                                "[LOG] Se envia la peticion",
                                "[LOG] Se valida el status Code",
                                "Expected Status Code: 201",
                                "Actual Status Code: 201",
                                "[LOG] Se valida el contenido del response",
                                "Actual Content: {",
                                "    \"name\": \"morpheus\",",
                                "    \"job\": \"leader\",",
                                "    \"id\": \"635\",",
                                "    \"createdAt\": \"2024-06-25T15:30:59.147Z\"",
                                "}",
                                "Expected Content_1",
                                "Expected Content: leader",
                                "Expected Content_2",
                                "Expected Content: \"id\": \"97\"",
                                "Expected Content_3",
                                "Expected Content: \"name\": \"morpheus\"",
                                "Expected Content_4",
                                " PASSED FAILED PASSED ",
                                "[LOG] Error al validar el contenido del response",
                                "Step failed: el response debe contener el contenido esperado del excel \"3\""
                            ],
                            "status": "failed",
                            "message": "Error al validar el contenido del response:\n[LOG] Se valida el contenido del response\n\n<strong>Actual Content:</strong> {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\",\n    \"id\": \"635\",\n    \"createdAt\": \"2024-06-25T15:30:59.147Z\"\n}\n\n\nExpected Content 1: leader\n<strong>PASSED</strong>\n\nExpected Content 2: \"id\": \"97\"\n<strong>FAILED</strong>\n\nExpected Content 3: \"name\": \"morpheus\"\n<strong>PASSED</strong>\n\n"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            },
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:15",
                "name": "jsonplaceholder exitoso PUT",
                "status": "passed",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "4"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"4\"",
                        "result": {
                            "duration": 0.05061912536621094,
                            "status": "passed",
                            "message": "Se extrae: \nEndpoint: https://jsonplaceholder.typicode.com/todos/1"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "4"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"4\"",
                        "result": {
                            "duration": 0.7687647342681885,
                            "status": "passed",
                            "message": "<strong>REQUEST:</strong>\nPUT https://jsonplaceholder.typicode.com/todos/1\nRequest Headers: {\n    \"User-Agent\": \"python-requests/2.32.2\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Accept\": \"application/json\",\n    \"Connection\": \"keep-alive\",\n    \"Content-Length\": \"0\"\n}\n\n\n<strong>RESPONSE:</strong>\nPUT - Code: 200 OK\nHeaders: {\n    \"Date\": \"Tue, 25 Jun 2024 15:31:00 GMT\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"Content-Length\": \"13\",\n    \"Connection\": \"keep-alive\",\n    \"Report-To\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?ts=1719329460&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=yJaqtODmxJ3hqJeqZUuFeKRncQn1c9pkNi3I4lyK4a0%3D\\\"}]}\",\n    \"Reporting-Endpoints\": \"heroku-nel=https://nel.heroku.com/reports?ts=1719329460&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=yJaqtODmxJ3hqJeqZUuFeKRncQn1c9pkNi3I4lyK4a0%3D\",\n    \"Nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"success_fraction\\\":0.005,\\\"failure_fraction\\\":0.05,\\\"response_headers\\\":[\\\"Via\\\"]}\",\n    \"X-Powered-By\": \"Express\",\n    \"X-Ratelimit-Limit\": \"1000\",\n    \"X-Ratelimit-Remaining\": \"999\",\n    \"X-Ratelimit-Reset\": \"1719329466\",\n    \"Vary\": \"Origin, Accept-Encoding\",\n    \"Access-Control-Allow-Credentials\": \"true\",\n    \"Cache-Control\": \"no-cache\",\n    \"Pragma\": \"no-cache\",\n    \"Expires\": \"-1\",\n    \"X-Content-Type-Options\": \"nosniff\",\n    \"Etag\": \"W/\\\"d-p13Thq1mbIznE8TsFv4BmW8SRpg\\\"\",\n    \"Via\": \"1.1 vegur\",\n    \"CF-Cache-Status\": \"DYNAMIC\",\n    \"Server\": \"cloudflare\",\n    \"CF-RAY\": \"899600835c33b4da-SCL\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n}\nElapsed Time: 0:00:00.753349\n{\n    \"id\": 1\n}\n"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "4"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"4\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "[LOG] Se valida el status Code\nExpected Status Code: 200\nActual Status Code: 200\n"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "4"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"4\"",
                        "result": {
                            "duration": 0.047304391860961914,
                            "status": "passed",
                            "message": "\n[LOG] Se valida el contenido del response\n\n<strong>Actual Content:</strong> {\n    \"id\": 1\n}\n\n\nExpected Content 1: {\n    \"id\": 1\n}\n<strong>PASSED</strong>\n\nExpected Content 2: id\n<strong>PASSED</strong>\n\nExpected Content 3: 1\n<strong>PASSED</strong>\n\n"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            },
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:16",
                "name": "Api Login HBK - Exitoso",
                "status": "failed",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "5"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"5\"",
                        "result": {
                            "duration": 0.05309009552001953,
                            "status": "passed",
                            "message": "Se extrae: \nEndpoint: http://openam-mibanco-usw2-staging.id.forgerock.io/am/json/realms/root/realms/alpha/authenticate"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "5"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"5\"",
                        "result": {
                            "duration": 1.1313512325286865,
                            "status": "passed",
                            "message": "<strong>REQUEST:</strong>\nPOST https://openam-mibanco-usw2-staging.id.forgerock.io:443/am/json/realms/root/realms/alpha/authenticate?authIndexType=service&authIndexValue=mibanco-login-recaptcha\nRequest Headers: {\n    \"User-Agent\": \"python-requests/2.32.2\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Accept\": \"*/*\",\n    \"Connection\": \"keep-alive\",\n    \"Accept-API-Version\": \"resource=1.0\",\n    \"x-consumer-id\": \"homebanking\",\n    \"X-ForgeRock-TransactionId\": \"mibanco01\",\n    \"x-consumer-correlation-id\": \"1\",\n    \"x-consumer-request-id\": \"1\",\n    \"Content-Length\": \"0\"\n}\nParams: {\n    \"authIndexType\": \"service\",\n    \"authIndexValue\": \"mibanco-login-recaptcha\"\n}\n\n\n<strong>RESPONSE:</strong>\nPOST - Code: 200 \nHeaders: {\n    \"x-frame-options\": \"SAMEORIGIN\",\n    \"content-security-policy-report-only\": \"default-src 'self'; frame-ancestors 'self'; script-src 'none'\",\n    \"x-content-type-options\": \"nosniff\",\n    \"cache-control\": \"private\",\n    \"content-api-version\": \"resource=1.2\",\n    \"expires\": \"0\",\n    \"pragma\": \"no-cache\",\n    \"set-cookie\": \"amlbcookie=01; Path=/; Domain=openam-mibanco-usw2-staging.id.forgerock.io; Secure; HttpOnly; SameSite=none\",\n    \"content-type\": \"application/json\",\n    \"content-length\": \"3733\",\n    \"date\": \"Tue, 25 Jun 2024 15:31:00 GMT\",\n    \"x-forgerock-transactionid\": \"mibanco01\",\n    \"strict-transport-security\": \"max-age=31536000; includeSubDomains; preload;\",\n    \"x-robots-tag\": \"none\",\n    \"Via\": \"1.1 google\",\n    \"Alt-Svc\": \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"\n}\nElapsed Time: 0:00:00.421116\n{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ3aGl0ZWxpc3Qtc3RhdGUiOiIxOGRiNjA0Yy02N2ViLTRmNjktOTJjMS02NTAwNDNmNTEyMDEiLCJhdXRoSW5kZXhWYWx1ZSI6Im1pYmFuY28tbG9naW4tcmVjYXB0Y2hhIiwib3RrIjoiYm1qbDA5Y3Q4ZmQzamdhazdhZjh0dm5tZ2giLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2FscGhhIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1M1MweDNlbnBMUWpNeVgybDBWWE01V0VFMWJuRjNMa2xwTVd0TmJqQm9NRmxFTFdNMldWQkJWMEp4UWtOR1ptVkNSMFprZGtjNE1EZDJhbkpWYTBsSVJVdDZZVGRhVEhGVE9XaHlaWEZNWld0c1pDMVlhbkV0TUc0eFdtWm1PR3c1YURKV1ZqSmFYMDlrYXpoNFNHUldOWGd4WkV4bWFFRmxORGxqTm1JdFJrRnlTV2t3WVRad1dUVmtTREkxZUVvdE1FdzRZVzlRWkU5WlRXNVJORnBrYjNOdVQwaHFSRzFoWWxkYWRFRnhhVkJoVjFrNFFuWnRNR3BKWlUwNGNtcDRNbmcxYzFjMlQwUTRaRFl4TVVOQmIzaG1SekU0Y1dNMFpFSnJNR0UyTWxSVlV5MW5VV1ZoYW14V05IRkhhMHhMWmpCdGNFbG1WVVJ4V1ZscVNYQmtRVzVITFRoZldpMHhYMHR1WVZaSloyNTJiMlZUYlRsdE5tTjJVVGRpTlV0NWNUbE9XRlYzWkRadWEyUTRiWGwyVVZGNlQzRnhlVFUwYlRkNFMwNXZNR2xVTWtNNVZYQlhPVnBuVmpWU1UwRmZXVWREWWw5dFJrVldVa3RXUVMwMFdFc3dVMDUxUm1OYWFTMUNiRlZ5TmpWRGRsUnVNV1ZUYWxOTmRuTmlkWFJGYjJwSmFuRjFlVEUzYWpCWFJVWmtlRU5HUjJKdGVHSXdNbVJtVGpNd01YRlhWMmhNZVdkdmMxZG1aMmMyYWpSTFNVcDZiMk5yTFdSbFYwYzFPRlJUUnpOelVuWnBkV0ZXYkc5S2NFaFJiblpETlZkTU16QlhhSEJOY1dGYVUyNWhjbTAyWWtWeVFqaGpUbTEwYVc0NE5VZHNSV3RSUmpORU9FRTJTRFJrVTNGdFRHVkxUMFprU1dSVWFURlhWVGN0WjBsR09VNTBPRUpVTUhZd1NHdzFjbk5oWWpWNmNuaGFOMmhDYVdGUFIwbFROa2hsZEdWbFUzYzFXVEk1T0hwTmJXb3lRekJtYWpkeWMxSkNOVEE1YzBWUlNTMXNjV0pxVGs0NFkzcHZWWFpKTkc1eWIxbEJPVUZ2Y2xJNFIyMWxjVUp6YlRSek0zaFBjbVZMUmxOWU5sbFJkekpRZGxKVFpXUllhREJHYkU5T1VWbERjbFEwTnpKVlVsZEdOMVZGTjA1alNWbHRlRTVCV0UxRU1HSjNXVkF5TFhadFdYbGFjSFpXTnpGaGMzbzJMVEpvWlVGM1JrdDRjVTFJVGtKeWJsZDRRbXRCZDFZemExSXhkVjlSUzJ0U1ZGTkRSbUp3U3pKVGVYZEliMkZwUW13MWJXRkxWVFJuYzBOdFgyNVdiVVpYVTB0bGJtaFBZV014WlY5YVIwTmZZMDVSVTB4Q04wbHZkR1JIZDFkQmNFVklUMmMyZDNSamRHNUViMjVsWTJoeE9UUXlWbXRhZGpaRlRGUlBkMGcwZEcxd2VsWjFZbGxmUkhOcmN6RmZNamxEUm5GMk4yMUlReTFhYm1kQmFFVkhUV1JxTTJNMmRVczNiR1JqTm1jd1ZYTTNkMlJuZFhnMVpWbFVRVmRJV0RKWmQyUnJNM1F0WjI5Q1UxYzFVbE5aU1hWeFZ6WnBaRWRPYW5OWVlrcEhRVkJxUVd0SVZraE5VM1YxZERGZlJuVmlhM0YzTjFaMVlXOVBRbTAxVm1sWFJsbHRObGhVV0ZKelRVSlhSMGd6VVc5NFlWWnFRemhyVEZObVkzWXljWHBtWTFObGJHaEVUV1JwUkcxUU9HNUlURFJmWjNKblpYSXlNbTVNUTBaVGEyaFFOR1JsYlMwMlQwVkRZa2gyY1cxR1ZFWkpSR1JqWm5oRGJGUlVRV055VVd0R1pVbHNiR0l3VGs1aWJVbElPRlZYUVdwRVdYWnhUV1Z6VUhRMU1WRnRNM2syTlhNMFgybHhjbE53VldvemVqQnFNR1ZYYjJ0eWJrUkNhbkpGTkdKTWFISjZhbTVNU2pSdE5tOTFSMkpFYVhweE5VNUtRMmxtWjNGdVIyeE5VVkZPT1ZCSGNsbE9lamh4U1VobmNUbHFNWFZwVm1wMVpXUjFRVGgxTVVOdGJ6Rk5iMFZaUlcxR01GaGtha1k1UldNMmNsTklheTFQWDBaV09Fd3pjRUZMWDJsd1VrSXlSVEU0WTJaUU9IbzRaV3hzVXpRM1ZUSkZWR1l6ZGpGQlYwdDNlRGR1WnpsSWFtZ3hTWEZTUldGcGNXUktVSGQzUTFob1Rrb3dhVXRhWmpCNVMxSnJRekIzWVZSaFNtZHlZVkUyVkhWZlgwOW5kV1pyUm1oSmVGTkJTVXhHYzJOUmEwSnVOWEpJTlZWS05UVnpia3cxUTNod1NTMDBUSGhLVTNkM1ZYbHBhVEpYTmxKRFRHUk5iakZLU0U1SE4zUklPVWgzUmpGZlQzaHhSMk52ZFhOSFNVbHRlVGR0TjNsTExTMXJWbGhvZVcxRmVWYzBSVFZVTW1wRlpHaEtiVnBpYmxOUldWZEVYM2RUTmkwdE0yWndOMFpVVjJoaGVYQlhSRmxJZG1kcFUxSmpTRE56U2xaMmJHSlNVRXhQVjJSS1RUbEZabGhGWDFSQ1ZsbzNTa2RGTFdGbmJsRXhNMmhaWDBKeE5sOW1UVXhMY1dOa1lWSnNlbVJQYjBKSk5EZzJVUzVMTldwcU1GSlpNRWRyV0V0TFdHUkRSVk42UkRGUi55WmlNdVpwcTBqZTByRW8xWFV4T3ZCbDNMNEdYT0VTcXhpU01kM1FIWGxrIiwiZXhwIjoxNzE5MzI5ODIxLCJpYXQiOjE3MTkzMjk0NjF9.m1g9jLci3oUFx7p49sJG1QQDx_yQ0qa7K-N--6IP3a0\",\n    \"callbacks\": [\n        {\n            \"type\": \"NameCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"User Name\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 0\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 1\n        }\n    ],\n    \"stage\": \"credentials-collect\"\n}\n"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "5"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"5\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "[LOG] Se valida el status Code\nExpected Status Code: 200\nActual Status Code: 200\n"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "5"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"5\"",
                        "result": {
                            "duration": 0.07909607887268066,
                            "error_message": [
                                "Assertion Failed: [LOG] Error al validar el contenido del response",
                                "Captured stdout:",
                                "[LOG] Se extrae del excel los datos",
                                "[LOG] Se envia la peticion",
                                "[LOG] Se valida el status Code",
                                "Expected Status Code: 200",
                                "Actual Status Code: 200",
                                "[LOG] Se valida el contenido del response",
                                "Actual Content: {",
                                "    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ3aGl0ZWxpc3Qtc3RhdGUiOiIxOGRiNjA0Yy02N2ViLTRmNjktOTJjMS02NTAwNDNmNTEyMDEiLCJhdXRoSW5kZXhWYWx1ZSI6Im1pYmFuY28tbG9naW4tcmVjYXB0Y2hhIiwib3RrIjoiYm1qbDA5Y3Q4ZmQzamdhazdhZjh0dm5tZ2giLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2FscGhhIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1M1MweDNlbnBMUWpNeVgybDBWWE01V0VFMWJuRjNMa2xwTVd0TmJqQm9NRmxFTFdNMldWQkJWMEp4UWtOR1ptVkNSMFprZGtjNE1EZDJhbkpWYTBsSVJVdDZZVGRhVEhGVE9XaHlaWEZNWld0c1pDMVlhbkV0TUc0eFdtWm1PR3c1YURKV1ZqSmFYMDlrYXpoNFNHUldOWGd4WkV4bWFFRmxORGxqTm1JdFJrRnlTV2t3WVRad1dUVmtTREkxZUVvdE1FdzRZVzlRWkU5WlRXNVJORnBrYjNOdVQwaHFSRzFoWWxkYWRFRnhhVkJoVjFrNFFuWnRNR3BKWlUwNGNtcDRNbmcxYzFjMlQwUTRaRFl4TVVOQmIzaG1SekU0Y1dNMFpFSnJNR0UyTWxSVlV5MW5VV1ZoYW14V05IRkhhMHhMWmpCdGNFbG1WVVJ4V1ZscVNYQmtRVzVITFRoZldpMHhYMHR1WVZaSloyNTJiMlZUYlRsdE5tTjJVVGRpTlV0NWNUbE9XRlYzWkRadWEyUTRiWGwyVVZGNlQzRnhlVFUwYlRkNFMwNXZNR2xVTWtNNVZYQlhPVnBuVmpWU1UwRmZXVWREWWw5dFJrVldVa3RXUVMwMFdFc3dVMDUxUm1OYWFTMUNiRlZ5TmpWRGRsUnVNV1ZUYWxOTmRuTmlkWFJGYjJwSmFuRjFlVEUzYWpCWFJVWmtlRU5HUjJKdGVHSXdNbVJtVGpNd01YRlhWMmhNZVdkdmMxZG1aMmMyYWpSTFNVcDZiMk5yTFdSbFYwYzFPRlJUUnpOelVuWnBkV0ZXYkc5S2NFaFJiblpETlZkTU16QlhhSEJOY1dGYVUyNWhjbTAyWWtWeVFqaGpUbTEwYVc0NE5VZHNSV3RSUmpORU9FRTJTRFJrVTNGdFRHVkxUMFprU1dSVWFURlhWVGN0WjBsR09VNTBPRUpVTUhZd1NHdzFjbk5oWWpWNmNuaGFOMmhDYVdGUFIwbFROa2hsZEdWbFUzYzFXVEk1T0hwTmJXb3lRekJtYWpkeWMxSkNOVEE1YzBWUlNTMXNjV0pxVGs0NFkzcHZWWFpKTkc1eWIxbEJPVUZ2Y2xJNFIyMWxjVUp6YlRSek0zaFBjbVZMUmxOWU5sbFJkekpRZGxKVFpXUllhREJHYkU5T1VWbERjbFEwTnpKVlVsZEdOMVZGTjA1alNWbHRlRTVCV0UxRU1HSjNXVkF5TFhadFdYbGFjSFpXTnpGaGMzbzJMVEpvWlVGM1JrdDRjVTFJVGtKeWJsZDRRbXRCZDFZemExSXhkVjlSUzJ0U1ZGTkRSbUp3U3pKVGVYZEliMkZwUW13MWJXRkxWVFJuYzBOdFgyNVdiVVpYVTB0bGJtaFBZV014WlY5YVIwTmZZMDVSVTB4Q04wbHZkR1JIZDFkQmNFVklUMmMyZDNSamRHNUViMjVsWTJoeE9UUXlWbXRhZGpaRlRGUlBkMGcwZEcxd2VsWjFZbGxmUkhOcmN6RmZNamxEUm5GMk4yMUlReTFhYm1kQmFFVkhUV1JxTTJNMmRVczNiR1JqTm1jd1ZYTTNkMlJuZFhnMVpWbFVRVmRJV0RKWmQyUnJNM1F0WjI5Q1UxYzFVbE5aU1hWeFZ6WnBaRWRPYW5OWVlrcEhRVkJxUVd0SVZraE5VM1YxZERGZlJuVmlhM0YzTjFaMVlXOVBRbTAxVm1sWFJsbHRObGhVV0ZKelRVSlhSMGd6VVc5NFlWWnFRemhyVEZObVkzWXljWHBtWTFObGJHaEVUV1JwUkcxUU9HNUlURFJmWjNKblpYSXlNbTVNUTBaVGEyaFFOR1JsYlMwMlQwVkRZa2gyY1cxR1ZFWkpSR1JqWm5oRGJGUlVRV055VVd0R1pVbHNiR0l3VGs1aWJVbElPRlZYUVdwRVdYWnhUV1Z6VUhRMU1WRnRNM2syTlhNMFgybHhjbE53VldvemVqQnFNR1ZYYjJ0eWJrUkNhbkpGTkdKTWFISjZhbTVNU2pSdE5tOTFSMkpFYVhweE5VNUtRMmxtWjNGdVIyeE5VVkZPT1ZCSGNsbE9lamh4U1VobmNUbHFNWFZwVm1wMVpXUjFRVGgxTVVOdGJ6Rk5iMFZaUlcxR01GaGtha1k1UldNMmNsTklheTFQWDBaV09Fd3pjRUZMWDJsd1VrSXlSVEU0WTJaUU9IbzRaV3hzVXpRM1ZUSkZWR1l6ZGpGQlYwdDNlRGR1WnpsSWFtZ3hTWEZTUldGcGNXUktVSGQzUTFob1Rrb3dhVXRhWmpCNVMxSnJRekIzWVZSaFNtZHlZVkUyVkhWZlgwOW5kV1pyUm1oSmVGTkJTVXhHYzJOUmEwSnVOWEpJTlZWS05UVnpia3cxUTNod1NTMDBUSGhLVTNkM1ZYbHBhVEpYTmxKRFRHUk5iakZLU0U1SE4zUklPVWgzUmpGZlQzaHhSMk52ZFhOSFNVbHRlVGR0TjNsTExTMXJWbGhvZVcxRmVWYzBSVFZVTW1wRlpHaEtiVnBpYmxOUldWZEVYM2RUTmkwdE0yWndOMFpVVjJoaGVYQlhSRmxJZG1kcFUxSmpTRE56U2xaMmJHSlNVRXhQVjJSS1RUbEZabGhGWDFSQ1ZsbzNTa2RGTFdGbmJsRXhNMmhaWDBKeE5sOW1UVXhMY1dOa1lWSnNlbVJQYjBKSk5EZzJVUzVMTldwcU1GSlpNRWRyV0V0TFdHUkRSVk42UkRGUi55WmlNdVpwcTBqZTByRW8xWFV4T3ZCbDNMNEdYT0VTcXhpU01kM1FIWGxrIiwiZXhwIjoxNzE5MzI5ODIxLCJpYXQiOjE3MTkzMjk0NjF9.m1g9jLci3oUFx7p49sJG1QQDx_yQ0qa7K-N--6IP3a0\",",
                                "    \"callbacks\": [",
                                "        {",
                                "            \"type\": \"NameCallback\",",
                                "            \"output\": [",
                                "                {",
                                "                    \"name\": \"prompt\",",
                                "                    \"value\": \"User Name\"",
                                "                }",
                                "            ],",
                                "            \"input\": [",
                                "                {",
                                "                    \"name\": \"IDToken1\",",
                                "                    \"value\": \"\"",
                                "                }",
                                "            ],",
                                "            \"_id\": 0",
                                "        },",
                                "        {",
                                "            \"type\": \"PasswordCallback\",",
                                "            \"output\": [",
                                "                {",
                                "                    \"name\": \"prompt\",",
                                "                    \"value\": \"Password\"",
                                "                }",
                                "            ],",
                                "            \"input\": [",
                                "                {",
                                "                    \"name\": \"IDToken2\",",
                                "                    \"value\": \"\"",
                                "                }",
                                "            ],",
                                "            \"_id\": 1",
                                "        }",
                                "    ],",
                                "    \"stage\": \"credentials-collect\"",
                                "}",
                                "Expected Content_1",
                                "Expected Content: \"stage\": \"credentials-collect\"",
                                "Expected Content_2",
                                "Expected Content: {",
                                "                    \"name\": \"IDToken2\",",
                                "                    \"value\": \"\"",
                                "                }",
                                "Expected Content_3",
                                "Expected Content: hola",
                                "Expected Content_4",
                                "Expected Content: \"type\": \"NameCallback\",",
                                "Expected Content_5",
                                " PASSED PASSED FAILED PASSED ",
                                "[LOG] Error al validar el contenido del response",
                                "Step failed: el response debe contener el contenido esperado del excel \"5\""
                            ],
                            "status": "failed",
                            "message": "Error al validar el contenido del response:\n[LOG] Se valida el contenido del response\n\n<strong>Actual Content:</strong> {\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ3aGl0ZWxpc3Qtc3RhdGUiOiIxOGRiNjA0Yy02N2ViLTRmNjktOTJjMS02NTAwNDNmNTEyMDEiLCJhdXRoSW5kZXhWYWx1ZSI6Im1pYmFuY28tbG9naW4tcmVjYXB0Y2hhIiwib3RrIjoiYm1qbDA5Y3Q4ZmQzamdhazdhZjh0dm5tZ2giLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2FscGhhIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1M1MweDNlbnBMUWpNeVgybDBWWE01V0VFMWJuRjNMa2xwTVd0TmJqQm9NRmxFTFdNMldWQkJWMEp4UWtOR1ptVkNSMFprZGtjNE1EZDJhbkpWYTBsSVJVdDZZVGRhVEhGVE9XaHlaWEZNWld0c1pDMVlhbkV0TUc0eFdtWm1PR3c1YURKV1ZqSmFYMDlrYXpoNFNHUldOWGd4WkV4bWFFRmxORGxqTm1JdFJrRnlTV2t3WVRad1dUVmtTREkxZUVvdE1FdzRZVzlRWkU5WlRXNVJORnBrYjNOdVQwaHFSRzFoWWxkYWRFRnhhVkJoVjFrNFFuWnRNR3BKWlUwNGNtcDRNbmcxYzFjMlQwUTRaRFl4TVVOQmIzaG1SekU0Y1dNMFpFSnJNR0UyTWxSVlV5MW5VV1ZoYW14V05IRkhhMHhMWmpCdGNFbG1WVVJ4V1ZscVNYQmtRVzVITFRoZldpMHhYMHR1WVZaSloyNTJiMlZUYlRsdE5tTjJVVGRpTlV0NWNUbE9XRlYzWkRadWEyUTRiWGwyVVZGNlQzRnhlVFUwYlRkNFMwNXZNR2xVTWtNNVZYQlhPVnBuVmpWU1UwRmZXVWREWWw5dFJrVldVa3RXUVMwMFdFc3dVMDUxUm1OYWFTMUNiRlZ5TmpWRGRsUnVNV1ZUYWxOTmRuTmlkWFJGYjJwSmFuRjFlVEUzYWpCWFJVWmtlRU5HUjJKdGVHSXdNbVJtVGpNd01YRlhWMmhNZVdkdmMxZG1aMmMyYWpSTFNVcDZiMk5yTFdSbFYwYzFPRlJUUnpOelVuWnBkV0ZXYkc5S2NFaFJiblpETlZkTU16QlhhSEJOY1dGYVUyNWhjbTAyWWtWeVFqaGpUbTEwYVc0NE5VZHNSV3RSUmpORU9FRTJTRFJrVTNGdFRHVkxUMFprU1dSVWFURlhWVGN0WjBsR09VNTBPRUpVTUhZd1NHdzFjbk5oWWpWNmNuaGFOMmhDYVdGUFIwbFROa2hsZEdWbFUzYzFXVEk1T0hwTmJXb3lRekJtYWpkeWMxSkNOVEE1YzBWUlNTMXNjV0pxVGs0NFkzcHZWWFpKTkc1eWIxbEJPVUZ2Y2xJNFIyMWxjVUp6YlRSek0zaFBjbVZMUmxOWU5sbFJkekpRZGxKVFpXUllhREJHYkU5T1VWbERjbFEwTnpKVlVsZEdOMVZGTjA1alNWbHRlRTVCV0UxRU1HSjNXVkF5TFhadFdYbGFjSFpXTnpGaGMzbzJMVEpvWlVGM1JrdDRjVTFJVGtKeWJsZDRRbXRCZDFZemExSXhkVjlSUzJ0U1ZGTkRSbUp3U3pKVGVYZEliMkZwUW13MWJXRkxWVFJuYzBOdFgyNVdiVVpYVTB0bGJtaFBZV014WlY5YVIwTmZZMDVSVTB4Q04wbHZkR1JIZDFkQmNFVklUMmMyZDNSamRHNUViMjVsWTJoeE9UUXlWbXRhZGpaRlRGUlBkMGcwZEcxd2VsWjFZbGxmUkhOcmN6RmZNamxEUm5GMk4yMUlReTFhYm1kQmFFVkhUV1JxTTJNMmRVczNiR1JqTm1jd1ZYTTNkMlJuZFhnMVpWbFVRVmRJV0RKWmQyUnJNM1F0WjI5Q1UxYzFVbE5aU1hWeFZ6WnBaRWRPYW5OWVlrcEhRVkJxUVd0SVZraE5VM1YxZERGZlJuVmlhM0YzTjFaMVlXOVBRbTAxVm1sWFJsbHRObGhVV0ZKelRVSlhSMGd6VVc5NFlWWnFRemhyVEZObVkzWXljWHBtWTFObGJHaEVUV1JwUkcxUU9HNUlURFJmWjNKblpYSXlNbTVNUTBaVGEyaFFOR1JsYlMwMlQwVkRZa2gyY1cxR1ZFWkpSR1JqWm5oRGJGUlVRV055VVd0R1pVbHNiR0l3VGs1aWJVbElPRlZYUVdwRVdYWnhUV1Z6VUhRMU1WRnRNM2syTlhNMFgybHhjbE53VldvemVqQnFNR1ZYYjJ0eWJrUkNhbkpGTkdKTWFISjZhbTVNU2pSdE5tOTFSMkpFYVhweE5VNUtRMmxtWjNGdVIyeE5VVkZPT1ZCSGNsbE9lamh4U1VobmNUbHFNWFZwVm1wMVpXUjFRVGgxTVVOdGJ6Rk5iMFZaUlcxR01GaGtha1k1UldNMmNsTklheTFQWDBaV09Fd3pjRUZMWDJsd1VrSXlSVEU0WTJaUU9IbzRaV3hzVXpRM1ZUSkZWR1l6ZGpGQlYwdDNlRGR1WnpsSWFtZ3hTWEZTUldGcGNXUktVSGQzUTFob1Rrb3dhVXRhWmpCNVMxSnJRekIzWVZSaFNtZHlZVkUyVkhWZlgwOW5kV1pyUm1oSmVGTkJTVXhHYzJOUmEwSnVOWEpJTlZWS05UVnpia3cxUTNod1NTMDBUSGhLVTNkM1ZYbHBhVEpYTmxKRFRHUk5iakZLU0U1SE4zUklPVWgzUmpGZlQzaHhSMk52ZFhOSFNVbHRlVGR0TjNsTExTMXJWbGhvZVcxRmVWYzBSVFZVTW1wRlpHaEtiVnBpYmxOUldWZEVYM2RUTmkwdE0yWndOMFpVVjJoaGVYQlhSRmxJZG1kcFUxSmpTRE56U2xaMmJHSlNVRXhQVjJSS1RUbEZabGhGWDFSQ1ZsbzNTa2RGTFdGbmJsRXhNMmhaWDBKeE5sOW1UVXhMY1dOa1lWSnNlbVJQYjBKSk5EZzJVUzVMTldwcU1GSlpNRWRyV0V0TFdHUkRSVk42UkRGUi55WmlNdVpwcTBqZTByRW8xWFV4T3ZCbDNMNEdYT0VTcXhpU01kM1FIWGxrIiwiZXhwIjoxNzE5MzI5ODIxLCJpYXQiOjE3MTkzMjk0NjF9.m1g9jLci3oUFx7p49sJG1QQDx_yQ0qa7K-N--6IP3a0\",\n    \"callbacks\": [\n        {\n            \"type\": \"NameCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"User Name\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 0\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 1\n        }\n    ],\n    \"stage\": \"credentials-collect\"\n}\n\n\nExpected Content 1: \"stage\": \"credentials-collect\"\n<strong>PASSED</strong>\n\nExpected Content 2: {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n<strong>PASSED</strong>\n\nExpected Content 3: hola\n<strong>FAILED</strong>\n\nExpected Content 4: \"type\": \"NameCallback\",\n<strong>PASSED</strong>\n\n"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            },
            {
                "keyword": "Scenario Outline",
                "location": "src/test/features/api_test.feature:17",
                "name": "Api Login HBK - Fallido - Mal Params",
                "status": "passed",
                "steps": [
                    {
                        "keyword": "Given",
                        "location": "src/test/features/api_test.feature:5",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "6"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:10"
                        },
                        "name": "se lee el endpoint y lo headers del excel \"6\"",
                        "result": {
                            "duration": 0.057008981704711914,
                            "status": "passed",
                            "message": "Se extrae: \nEndpoint: http://openam-mibanco-usw2-staging.id.forgerock.io/am/json/realms/root/realms/alpha/authenticate"
                        },
                        "step_type": "given"
                    },
                    {
                        "keyword": "When",
                        "location": "src/test/features/api_test.feature:6",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "6"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:33"
                        },
                        "name": "cuando envio un request al endpoint \"6\"",
                        "result": {
                            "duration": 0.5644068717956543,
                            "status": "passed",
                            "message": "<strong>REQUEST:</strong>\nPOST https://openam-mibanco-usw2-staging.id.forgerock.io:443/am/json/realms/root/realms/alpha/authenticate?authIndexType=Fail&authIndexValue=mibanco-login-recaptcha\nRequest Headers: {\n    \"User-Agent\": \"python-requests/2.32.2\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Accept\": \"*/*\",\n    \"Connection\": \"keep-alive\",\n    \"Accept-API-Version\": \"resource=1.0\",\n    \"x-consumer-id\": \"homebanking\",\n    \"X-ForgeRock-TransactionId\": \"mibanco01\",\n    \"x-consumer-correlation-id\": \"1\",\n    \"x-consumer-request-id\": \"1\",\n    \"Content-Length\": \"0\"\n}\nParams: {\n    \"authIndexType\": \"Fail\",\n    \"authIndexValue\": \"mibanco-login-recaptcha\"\n}\n\n\n<strong>RESPONSE:</strong>\nPOST - Code: 400 Bad Request\nHeaders: {\n    \"x-frame-options\": \"SAMEORIGIN\",\n    \"content-security-policy-report-only\": \"default-src 'self'; frame-ancestors 'self'; script-src 'none'\",\n    \"x-content-type-options\": \"nosniff\",\n    \"cache-control\": \"private\",\n    \"content-api-version\": \"resource=1.2\",\n    \"expires\": \"0\",\n    \"pragma\": \"no-cache\",\n    \"content-type\": \"application/json;charset=UTF-8\",\n    \"Content-Length\": \"52\",\n    \"date\": \"Tue, 25 Jun 2024 15:31:01 GMT\",\n    \"x-forgerock-transactionid\": \"mibanco01\",\n    \"strict-transport-security\": \"max-age=31536000; includeSubDomains; preload;\",\n    \"x-robots-tag\": \"none\",\n    \"Via\": \"1.1 google\",\n    \"Alt-Svc\": \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"\n}\nElapsed Time: 0:00:00.383473\n{\n    \"errorMessage\": \"Unknown Authentication Index Type\"\n}\n"
                        },
                        "step_type": "when"
                    },
                    {
                        "keyword": "Then",
                        "location": "src/test/features/api_test.feature:7",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "6"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:72"
                        },
                        "name": "se valida el estado del response con el esperado del excel \"6\"",
                        "result": {
                            "duration": 0.0,
                            "status": "passed",
                            "message": "[LOG] Se valida el status Code\nExpected Status Code: 400\nActual Status Code: 400\n"
                        },
                        "step_type": "then"
                    },
                    {
                        "keyword": "And",
                        "location": "src/test/features/api_test.feature:8",
                        "match": {
                            "arguments": [
                                {
                                    "name": "datos",
                                    "value": "6"
                                }
                            ],
                            "location": "src/test/features/steps/api_steps.py:95"
                        },
                        "name": "el response debe contener el contenido esperado del excel \"6\"",
                        "result": {
                            "duration": 0.03079056739807129,
                            "status": "passed",
                            "message": "\n[LOG] Se valida el contenido del response\n\n<strong>Actual Content:</strong> {\n    \"errorMessage\": \"Unknown Authentication Index Type\"\n}\n\n\nExpected Content 1: \"Unknown Authentication Index Type\"\n<strong>PASSED</strong>\n\n"
                        },
                        "step_type": "then"
                    }
                ],
                "tags": [
                    "test1",
                    "Prueba"
                ],
                "type": "scenario"
            }
        ],
        "keyword": "Feature",
        "location": "src/test/features/api_test.feature:1",
        "name": "Automatizacion de Servicios",
        "status": "failed",
        "tags": []
    }
]